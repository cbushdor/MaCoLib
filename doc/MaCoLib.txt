*MaCoLib.txt*       my MAnager for COlor LIBrary and some more stuff

		Creation Date :2024-02-15 23:11:52
		Last Modified : 2024-02-17 02:08:34
		Version : 0.0.0.92

==============================================================================
CONTENTS                                                *MaCoLib* *help_MaCoLib*

How to Install Plugin                                   |help_MaCoLib_install|
Intro                                                     |help_MaCoLib_intro|
Variables                                             |help_MaCoLib_Variables|
Functions                                             |help_MaCoLib_Functions|
Example                                                 |help_MaCoLib_Example|
Warning						          |help_MaCoLib_notes|
Helps                                                     |help_MaCoLib_extra|
Credits                                                 |help_MaCoLib_credits|
Licence                                                 |help_MaCoLib_licence|

==============================================================================
How to Install Plugin                                     *help_MaCoLib_install*

Technical requirements

    * Vim (text editor): Version 9.0.1050.
    * System macOS: Version 13.2.1 (22D68).
    * System Fedora: Version 38beta (Should work on other linux distros too).
    * Scripts: Markdown, Vim Script, shell sh.
    * Vim plugin: Vim-plug.

    Note
      Should be ok as long as Vim Script is supported by the editor (since
      version 8.0).


How to start
  We admit that Vim-plugin is already installed. If not so, go to
  https://github.com/junegunn/vim-plug and follow instructions.

  We configure ~/.vimrc below (~ means home directory):

>
     call plug#begin('~/.vim/plugged')
     Plug 'cbushdor/MaCoLib'
     call plug#end()
<

  and plugin will be installed in ~/.vim/plugged if everything is well
  configured.  Then type ':wq' to save and, quit. Edit ~/.vimrc to 
  relaunch. Then, type ':PlugInstall' and, look if plugin is installing 
  itself. A prompt will ask not to forget to set in Ëœ/.vimrc the variable:

==============================================================================
INTRO                                                       *help_MaCoLib_intro*

Sometimes it is had to read.

==============================================================================
VARIABLES                                               *help_MaCoLib_Variables*

g:current_path	 	We get current path.
g:local_path_homedir	Path to vimrc that contains files.
g:module_name		We get module name from homedir path.

==============================================================================
FUNCTIONS                                               *help_MaCoLib_Functions*

GetsVarString(var)	Creates the string for global 'var' value.
			Not set already in memory.

IsVarDefined(var)	This is used to check if 'var' a global variable does 
			exist. 

CreatesGlobalVar(var)	If it does not exist, it creates a variable prefixed 
			of 'g:' for global, followed by current file name, 
			followed by underscore, followed by var value then 
			it returns the string created, otherwise 'g:false'.


LoadSource(file)
	Loads source

GetsCurrentFileName()
	Gets current file nale

CreatesEnvVar(en)
	We create a envarionment variable string

LoadGlobVar(...)
	Load global extension that start with suf(ix)

Rand()
	Calculates random number

MyExec(p)
	Executes shell script input entered should be returned!
	p as  ':!read momo;echo $momo'

MyExecOut(p)
	Executes shell script no input expected so no result returned!
	p as  ':!read momo;echo $momo'

GetsPid()
	Gets PID

PrintsColoredString(arr)
	Prints colored string. Needs array as parameter.
	let MyArray = [['string1','highlightString1'], 
		       ['string2','highlighString2'] ]

AddToPrintColorString(a,s,c)
	Add new info to print in the string
	array, new string, color

ClearStringColor(a)
	We erase the string
	a is the is external Array declared!

AddStackStringColor(s,tuple)
	AddStackStringColor is to add tuple to s at the end
	returns the new list

AddHeadStringColor(s,tuple)
	AddHeadStringColor is to add tuple to s at the beging
	returns the new list

==============================================================================
EXAMPLE                                                   *help_MaCoLib_Example*
In $MYVIMRC you should have something like this.

>
  call plug#begin('~/.vim/plugged')

    " ------------------------------------------------------------------------
    " We put on line our library that MAnage the COlor LIBrary and other stuff
    Plug 'cbushdor/MaCoLib'


    " Add this line for tests purpose
    " The following line will let vim know that you have a plugin locally
    " follow next instructions to create it locally!
    Plug 'cbushdor/MyNewPlugin'
    " ------------------------------------------------------------------------

  call plug#end()
<

Create '~/.vim/plugged/MyNewPlugin/plugin/' directories:

>
  cd ~/.vim/plugged/
  mkdir -p MyNewPlugin/plugin/
  cd MyNewPlugin/plugin/
<

Create 'MyNewVimPlugin.vim' file in ~/.vim/plugged/MyNewPlugin/plugin/:

>
  " We call function MyStartErrorMyHeadersFill_file() when BufNewFile.
  autocmd BufNewFile * execute ":call MyStartErrorMyHeadersFill_file()"

  function! MyStartErrorMyHeadersFill_file(...)
    let MyArray = [
        \ [
        \   "Hello one ",
        \   ':hi MyColor  term=bold ctermfg=Blue guifg=#80a0ff gui=bold'
        \ ] ,
        \ [
        \   "Hello two ",
        \   ':hi MyColor  term=bold ctermfg=Cyan guifg=#80a0ff gui=bold'
        \ ]
        \]

    call AddToPrintColorString(MyArray,
    \     "Hello three",
    \     ':hi MyColor  term=bold ctermfg=Red guifg=#80a0ff gui=bold')
    call PrintsColoredString(MyArray)
  endfunction
<

If you open a file in ~/Downloads s.a:

>
	cd ~/Downloads
	vi file.txt
<

you should have something on the screen!

==============================================================================
WARNING                                                     *help_MaCoLib_notes*
	Plugin under construction. It is unstable.

==============================================================================
HELP						   	    *help_MaCoLib_extra*
	:help highlight or :help hi

==============================================================================
CREDITS                                                   *help_MaCoLib_credits*

	https://www.vim.org/

==============================================================================
LICENSE 						  *help_MaCoLib_licence*

	Permission is granted to copy, distribute, and/or modify this document 
	under the terms of the Creative Commons Attribution-NonCommercial 3.0
	Unported License, which is available at 
	http://creativecommons.org/licenses/by-nc/3.0/.


Address : cbushdor at laposte dot net

vim:tw=78:ts=8:noet:ft=help:norl:
